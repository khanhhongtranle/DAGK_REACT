{"version":3,"sources":["Components/Boards/Boards.jsx","App/App.jsx","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","card","Boards","classes","useState","listBoards","setListBoards","useEffect","mounted","fetch","then","response","json","boards","className","Grid","container","spacing","map","board","item","xs","Card","CardContent","Typography","variant","component","color","CardActions","Button","App","AppBar","position","Toolbar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAUMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,EACVC,SAAU,KAEdC,OAAQ,CACJC,QAAS,eACTC,OAAQ,QACRC,UAAW,cAEfC,MAAO,CACHC,SAAU,IAEdC,IAAK,CACDC,aAAc,IAElBC,KAAM,CACFN,OAAQ,OACRH,SAAU,SAUH,SAASU,IACpB,IAAMC,EAAUhB,IADa,EAGOiB,mBAAS,IAHhB,mBAGtBC,EAHsB,KAGVC,EAHU,KAkB7B,OAbAC,qBAAW,WACP,IAAIC,GAAU,EAOd,OAjBGC,MAAM,+DACRC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAWxBF,MAAK,SAAAG,GACFL,GACAF,EAAcO,MAGf,WACHL,GAAU,KAEf,IAGC,qBAAKM,UAAWX,EAAQb,KAAxB,SACI,cAACyB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACKZ,EAAWa,KAAI,SAAAC,GAAK,OACjB,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAf,SACI,eAACC,EAAA,EAAD,CAAMR,UAAWX,EAAQF,KAAzB,UACI,eAACsB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKC,MAAM,UAA9C,SACKR,EAAK,aAEV,eAACK,EAAA,EAAD,CAAYV,UAAWX,EAAQJ,IAAK4B,MAAM,gBAA1C,2BACmBR,EAAK,mBAG5B,cAACS,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQJ,QAAQ,WAAWE,MAAM,UAAjC,gCC7DhC,IAAMxC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,GAGdM,MAAO,CACHN,SAAU,OAuBHuC,MAnBf,WACI,IAAM3B,EAAUhB,IAClB,OACI,gCACI,qBAAK2B,UAAWX,EAAQb,KAAxB,SACI,cAACyC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,EAAA,EAAD,WACI,cAACT,EAAA,EAAD,CAAYC,QAAQ,KAAKX,UAAWX,EAAQN,MAA5C,uBAGA,cAACgC,EAAA,EAAD,CAAQF,MAAM,UAAd,2BAIZ,cAACzB,EAAD,QCtBKgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c310e982.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        minWidth: 275,\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    card: {\r\n        margin: '10px',\r\n        minWidth: 275,\r\n    }\r\n}));\r\n\r\n\r\nexport function getBoards() {\r\n    return fetch(`http://localhost:8080/api-react/index.php?action=get_boards`,)\r\n        .then((response) => response.json());\r\n}\r\n\r\nexport default function Boards() {\r\n    const classes = useStyles();\r\n\r\n    const [listBoards, setListBoards] = useState([]);\r\n\r\n    useEffect( () => {\r\n        let mounted = true;\r\n        getBoards()\r\n            .then(boards => {\r\n            if (mounted){\r\n                setListBoards(boards);\r\n            }\r\n        })\r\n        return () => {\r\n            mounted = false;\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={3}>\r\n                {listBoards.map(board =>\r\n                    <Grid item xs={3}>\r\n                        <Card className={classes.card}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\" color=\"primary\">\r\n                                    {board['board_name']}\r\n                                </Typography>\r\n                                <Typography className={classes.pos} color=\"textSecondary\">\r\n                                    Date created: {board['date_created']}\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button variant=\"outlined\" color=\"primary\">\r\n                                    More\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport Boards from \"../Components/Boards/Boards\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nfunction App() {\n    const classes = useStyles();\n  return (\n      <div>\n          <div className={classes.root}>\n              <AppBar position=\"static\">\n                  <Toolbar>\n                      <Typography variant=\"h6\" className={classes.title}>\n                          My Boards\n                      </Typography>\n                      <Button color=\"inherit\">Logout</Button>\n                  </Toolbar>\n              </AppBar>\n          </div>\n          <Boards />\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}